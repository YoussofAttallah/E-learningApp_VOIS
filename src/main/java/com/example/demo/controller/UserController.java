//package com.example.demo.controller;
//import com.example.demo.repository.UserRepository;
//import com.example.demo.entity.User;
//import org.springframework.beans.factory.annotation.Autowired;
//import org.springframework.web.bind.annotation.*;
//
//import java.util.Optional;
//
//@RestController // This means that this class is a Controller
//@RequestMapping(path="/api/user") // This means URL's start with /demo (after Application path)
//public class UserController {
//    @Autowired // This means to get the bean called userRepository
//    // Which is auto-generated by Spring, we will use it to handle the data
//    private UserRepository userRepository;
//    @PostMapping(path="/add") // Map ONLY POST Requests
//    public @ResponseBody String addNewUser (@RequestParam String first_name, @RequestParam String last_name
//            , @RequestParam String email, @RequestParam String phone) {
//        // @ResponseBody means the returned String is the response, not a view name
//        // @RequestParam means it is a parameter from the GET or POST request
//        User n = new User();
//        n.setFirstName(first_name);
//        n.setLastName(last_name);
//        n.setEmail(email);
//        n.setPhone(phone);
//        userRepository.save(n);
//        return "User Added Successfully";
//    }
//    @GetMapping(path = "/{userID}")
//    public @ResponseBody Optional<User> getUser(@RequestParam Integer userID){
//        return userRepository.findById(userID);
//    }
//    @GetMapping(path="/all")
//    public @ResponseBody Iterable<User> getAllUsers() {
//        // This returns a JSON or XML with the users
//        return userRepository.findAll();
//    }
//}
package com.example.demo.controller;

import com.example.demo.entity.User;
import com.example.demo.service.UserService;
import jakarta.validation.Valid;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@RestController
@RequestMapping("/api/user")
public class UserController {
    private final UserService userService;

    public UserController(UserService userService) {
        this.userService = userService;
    }

    @GetMapping("/all")
    public List<User> getAllUsers() {
        return userService.getAllUsers();
    }

    @PostMapping("/add")
    public void createNewUser(@RequestBody @Valid User user) {
        userService.createNewUser(user);
    }

    @GetMapping("/{userId}")
    public User getUser(@PathVariable(name = "userId") Integer userId) {
        return userService.getUser(userId);
    }
}
