openapi: 3.0.3
info:
  title: E_Learning _VOIS - OpenAPI 3.0
  description: E_Learning API _VOIS
  termsOfService: http://swagger.io/terms/
  version: 1.0.0
servers:
  - url: https://petstore3.swagger.io/api/v3
paths:
  /courses/all:
    get:
      tags: 
        - courses
      summary: Finds All Courses
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course'
                  
        '400':
          description: Invalid status value
          
  /courses/{courseId}:
    get:
      tags:
        - courses
      summary: Find course by Id
      description: Returns a single course
      operationId: getCourseById
      parameters:
        - name: courseId
          in: path
          description: Id of course to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'          
        
        '400':
          description: Invalid course Id supplied
        '404':
          description: Course not found
   
  /courses/{courseName}:
    get:
      tags:
        - courses
      summary: Find course by name
      description: Returns a single course
      operationId: getCourseByName
      parameters:
        - name: courseName
          in: path
          description: name of course to return
          required: true
          schema:
            type: string
            format: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'          
            
        '400':
          description: Invalid course name supplied
        '404':
          description: Course not found
  /instructor/all:
    get:
      tags: 
        - instructor
      summary: Finds All instructors
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Instructor'
                  
        '400':
          description: Invalid status value           
  
  /instructor/{instructorName}:
    get:
      tags:
        - instructor
      summary: Find instructor by name
      description: Returns a single instructor
      operationId: getInstructorByName
      parameters:
        - name: instructorName
          in: path
          description: name of instructor to return
          required: true
          schema:
            type: string
            format: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instructor'          
            
        '400':
          description: Invalid instructor name supplied
        '404':
          description: instructor not found
          
  /instructor/{instructorId}:
    get:
      tags:
        - instructor
      summary: Find instructor by Id
      description: Returns a single instructor
      operationId: getInstructorById
      parameters:
        - name: instructorId
          in: path
          description: Id of instructor to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Instructor'          
            
        '400':
          description: Invalid instructor Id supplied
        '404':
          description: instructor not found 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'  
components:
  schemas:
    Error: 
      type: object
      properties:
        code:
          type: integer
          format: int64
          example: 404
        reason:
          type: string
          format: string
          example: "Data not found"
        message:
          type: string
          format: string
          example: "the required data does not exist"
    Course:
      type: object
      properties:
        courseId:
          type: integer
          format: int64
          example: 1046
        CourseTitle:
          type: string
          format: string
          example: "Java for beginners"
        CourseLink:
          type: string
          format: url
          example: "www.udemy.com"
        Duration:
          type: integer
          format: int64
          example: 10  
        CourseImg:
          type: string
          format: url
          example: "https://www.softwaretestinghelp.com/wp-content/qa/uploads/2020/02/basic-syntax-of-Java-Programming.png"
        ViewersNum:
          type: integer
          format: int64
          example: 10
        RatingNum:
          type: integer
          format: int64
          example: 9
        RatingTotal:
          type: number
          format: float
          example: 3.5
        #this can contain an enum 
        CourseTags:
          type: array
          items: 
            type: string
            format: string
          example: ["frontend","devops"]
          
    Instructor:
      type: object
      properties:
        InstructorId:
          type: integer
          format: int64
          example: 20
        InstructorName:
          type: string
          format: string
          example: "John Wick"
        RatingNum:
          type: integer
          format: int64
          example: 9
        RatingTotal:
          type: number
          format: float
          example: 3.5
        InstructorLink:
          type: string
          format: url
          example: "www.linkedin.com"
        # Courses: 
        #   type: array
        #   items: 
        #     type: integer
        #     format: CourseId
        #     example: ["frontend","devops"]
          
      xml:
        name: order
   